[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"


[project]
name = "cheeto"
description = "Cheat sheet utility"
readme = "README.md"
requires-python = ">= 3.11, < 4"
license = {file = "LICENSE"}
authors = [{name = "Andy Gimblett", email = "andy@barefootcode.com"}]
keywords = [
    "cheat sheet",
    "cheatsheet",
    "shell",
    "terminal",
    "utility",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Unix Shell",
    "Topic :: Utilities",
    "Typing :: Typed",
]

dependencies = [
    "argparse-formatter >= 1.4, < 2",
    "humanize >= 4.8.0, < 4.9",
    "more-itertools >= 10.1.0, < 10.2",
    "platformdirs >= 3.5.1, < 3.6",
    "rich >= 13.6.0, < 14.0",
]
dynamic = ["version"]

[tool.setuptools.dynamic]
version = {attr = "cheeto.__version__"}

[project.optional-dependencies]
dev = [
    "black >= 23.11.0, < 23.12",
    "build >= 1.0.3, < 1.1",
    "bumpversion >= 0.6.0, < 0.7",
    "coverage >= 7.3.2, < 7.4",
    "flake8 >= 6.1.0, < 6.2",
    "mypy >= 1.7.0, < 1.8",
    "pre-commit >= 3.5.0, < 3.6",
    "pytest >= 7.4.3, < 7.5",
    "pytest-cov >= 4.1.0, < 5",
    "types-requests>= 2.31.0.10, < 2.32",
]

[project.scripts]
cheeto = "cheeto.scripts.cheeto:main"

[project.entry-points."cheeto.utils.markdown.renderers"]
null = "cheeto.utils.markdown:NullRenderer"
rich = "cheeto.utils.markdown:RichRenderer"
mdcat = "cheeto.utils.markdown:MdcatRenderer"
glow = "cheeto.utils.markdown:GlowRenderer"
glowl = "cheeto.utils.markdown:GlowLightRenderer"

[project.urls]
homepage = "https://github.com/gimbo/cheeto"
repository = "https://github.com/gimbo/cheeto"
documentation = "https://github.com/gimbo/cheeto"


[tool.coverage.run]
branch = true
source_pkgs = ["cheeto"]

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.html]
skip_covered = false
skip_empty = true


[tool.isort]
profile = "black"
lines_after_imports = 2
skip_gitignore = true


[tool.pytest.ini_options]
addopts = """
    --doctest-modules
    --cov
    --cov-config=pyproject.toml
    --cov-report term
    --cov-report html
    --no-cov-on-fail
"""
xfail_strict = true
